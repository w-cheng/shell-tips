* From http://www.w3schools.com/xpath/xpath_syntax.asp

* Common predicates
* /bookstore/book[1] 
	$ Selects the first book element that is the child of the bookstore element.

* /bookstore/book[last()] 
	$ Selects the last book element that is the child of the bookstore element

* /bookstore/book[last()-1] 
	$ Selects the last but one book element that is the child of the bookstore element

* /bookstore/book[position()<3] 
	$ Selects the first two book elements that are children of the bookstore element

* //title[@lang] 
	$ Selects all the title elements that have an attribute named lang

* //title[@lang='eng'] 
	$ Selects all the title elements that have an attribute named lang with a value of 'eng'

* /bookstore/book[price>35.00] 	
	$ Selects all the book elements of the bookstore element that have a price element with a value greater than 35.00

* /bookstore/book[price>35.00]/title 
	$ Selects all the title elements of the book elements of the bookstore element that have a price element with a value greater than 35.00

* employee[@secretary and @assistant]
	$ selects all the employee children of the context node that have both a secretary attribute and an assistant attribute

* chapter[title]
	$ selects the chapter children of the context node that have one or more title children


* Common path expressions
* nodename
	$ Selects all nodes with the name "nodename"

* /
	$ Selects from the root node

* //
	$ Selects nodes in the document from the current node that match the selection no matter where they are

* .
	$ Selects the current node

* ..
	$ Selects the parent of the current node

* @
	$ Selects attributes


* Common path expressions and their results
* bookstore
	$ Selects all nodes with the name "bookstore"

* /bookstore
	$ Selects the root element bookstore
	$ Note: If the path starts with a slash ( / ) it always represents an absolute path to an element!

* bookstore/book
	$ Selects all book elements that are children of bookstore

* //book
	$ Selects all book elements no matter where they are in the document

* bookstore//book
	$ Selects all book elements that are descendant of the bookstore element, no matter where they are under the bookstore element

* //@lang
	$ Selects all attributes that are named lang


* Select unknown nodes
* *
	$ Matches any element node

* @*
	$ Matches any attribute node

* node()
	$ Matches any node of any kind

* /bookstore/*
	$ Selects all the child nodes of the bookstore element
* //*
	$ Selects all elements in the document
* //title[@*]
	$ Selects all title elements which have any attribute


* Select several paths
* //book/title | //book/price
	$ Selects all the title AND price elements of all book elements

* //title | //price
	$ Selects all the title AND price elements in the document

* /bookstore/book/title | //price
	$ Selects all the title elements of the book element of the bookstore element AND all the price elements in the document

* Get text value of attribute node
	$ string(/book/@src)
